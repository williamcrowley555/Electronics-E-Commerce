/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ecommerceapp.gui.form;

import com.ecommerceapp.bll.IInvoiceBLL;
import com.ecommerceapp.bll.IProductBLL;
import com.ecommerceapp.bll.IUserBLL;
import com.ecommerceapp.bll.impl.InvoiceBLL;
import com.ecommerceapp.bll.impl.ProductBLL;
import com.ecommerceapp.bll.impl.UserBLL;
import com.ecommerceapp.dto.RevenueDTO;
import com.ecommerceapp.enums.ERole;
import com.ecommerceapp.gui.menu.MyComboBoxEditor;
import com.ecommerceapp.gui.menu.MyComboBoxRenderer;
import java.awt.Color;
import java.awt.Font;
import java.util.Vector;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import com.ecommerceapp.gui.menu.MyScrollBarUI;
import com.ecommerceapp.gui.popup.PopUpImportGUI;
import com.ecommerceapp.gui.popup.PopUpProductGUI;
import com.ecommerceapp.util.ProductTableLoaderUtil;
import com.ecommerceapp.util.RevenueTableLoaderUtil;
import com.ecommerceapp.util.ShortUserTableLoaderUtil;
import com.ecommerceapp.util.TableSetupUtil;
import java.awt.Component;
import java.awt.Dimension;
import java.io.UnsupportedEncodingException;
import java.lang.reflect.Field;
import java.time.LocalDate;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.border.MatteBorder;
import javax.swing.plaf.basic.BasicArrowButton;
import javax.swing.plaf.basic.BasicComboBoxUI;
import javax.swing.plaf.basic.BasicComboPopup;
import javax.swing.plaf.basic.BasicSpinnerUI;
import javax.swing.plaf.basic.ComboPopup;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author RavenPC
 */
public class StaffRevenueGUI extends javax.swing.JPanel {

    String[] columnNames = {
                        "Id",
                        "Tên sản phẩm",
                        "Giá",
                        "Số lượng bán",
                        "Tổng"               
    };

    String[] columnNamesStaff = {
                        "Id",
                        "Tên",
                        "Email",
                        "SĐT"
                        };
                          
    /**
     * Creates new form Panel1
     */
    private IInvoiceBLL invoiceBLL;
    private IUserBLL userBLL;
    TableRowSorter<TableModel> rowSorter = null;
    
    public StaffRevenueGUI() {
        initComponents();
        invoiceBLL = new InvoiceBLL();
        userBLL = new UserBLL();
        javax.swing.JComboBox boxMonth = (javax.swing.JComboBox) monthChooser.getComboBox();
        boxMonth = myComboBox(boxMonth, new Color(77,77,77));
        hideSpinnerArrow((javax.swing.JSpinner) monthChooser.getSpinner());
        hideSpinnerArrow((javax.swing.JSpinner) yearChooser.getSpinner());
        loadStaffTable();
        initNullTable();
        headerColor(77,77,77,tblRevenue);
        scroll.getVerticalScrollBar().setUI(new MyScrollBarUI());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void loadTableData(int month, int year) {
        if (invoiceBLL.getMonthlyProductReport(month, year).isEmpty())
        JOptionPane.showMessageDialog(this, "Không có thống kê doanh thu tháng " + month + " năm " + year, "Thông báo", JOptionPane.INFORMATION_MESSAGE);    
        else {
            tblRevenue.setModel(new RevenueTableLoaderUtil().setTable(invoiceBLL.getMonthlyProductReport(month, year), this.columnNames));
            this.rowSorter = TableSetupUtil.setTableFilter(tblRevenue, txtTimKiemInvoice);
            headerColor(77,77,77,tblRevenue);
            lblTitle.setText("Thống kê doanh thu tháng " + month + " năm " + year);
            int total = 0;
            int noTotal = 0;
            for (int i = 0; i < invoiceBLL.getMonthlyProductReport(month, year).size(); i++)
            {
                 total += Integer.parseInt(tblRevenue.getValueAt(i, 4)+"");
                 noTotal += Integer.parseInt(tblRevenue.getValueAt(i, 3)+"");
            }
           
            String strTotal = String.format("%,d", total);
            lblTotalQuantity.setText("Tổng số lượng bán: " + noTotal);
            lblTotal.setText("Tổng doanh thu: " + strTotal);
        }
    }
    
    public void loadStaffTable()
    {
        tblStaff.setModel(new ShortUserTableLoaderUtil().setTable(userBLL.findByRoleName(ERole.ROLE_EMPLOYEE.name()), this.columnNamesStaff));
        this.rowSorter = TableSetupUtil.setTableFilter(tblStaff, txtTimKiemStaff);
        headerColor(77,77,77,tblStaff);
    }
    
    public void initNullTable()
    {   
        DefaultTableModel emptyModel;
        emptyModel = new DefaultTableModel(columnNames,0);
        tblRevenue.setModel(emptyModel);
        headerColor(77,77,77,tblRevenue);
        scroll.getVerticalScrollBar().setUI(new MyScrollBarUI());
    }
    
    public Vector createHeader(Object[] columnNames){
        Vector header = new Vector();
        for(Object colName : columnNames){
            header.add(colName);
        }
        return header;
    }
    
    public void headerColor(int r, int b, int g, JTable table)
    {
        Color color = new Color(r,b,g);
        DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer();
        headerRenderer.setBackground(color);
        headerRenderer.setForeground(color.WHITE);
        
        JTableHeader tab_header = table.getTableHeader();					//Get the table header			
			tab_header.setFont(new Font("Microsoft Yahei", Font.PLAIN, 15));	
			tab_header.setPreferredSize(new Dimension(tab_header.getWidth(), 30));	//Modify the height of the table header
			table.setFont(new Font("Microsoft Yahei", Font.PLAIN, 13));

        for (int i = 0; i < table.getModel().getColumnCount(); i++) {
        table.getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer);
        }       
         
        table.setFont(new Font("Tahoma", Font.PLAIN, 16));
    }
    
    public JComboBox myComboBox(JComboBox box, Color color)
    {   
        box.setRenderer(new MyComboBoxRenderer());
        box.setEditor(new MyComboBoxEditor());
        
        box.setUI(new BasicComboBoxUI() 
        {
            @Override
            protected ComboPopup createPopup() 
            {
                BasicComboPopup basicComboPopup = new BasicComboPopup(comboBox);
                basicComboPopup.setBorder(new MatteBorder(2,2,2,2,color));
                return basicComboPopup;
            }
            
            @Override 
            protected JButton createArrowButton() 
            {
                Color matteGrey = new Color(223,230,233);
                Color flatGreen = new Color(26, 188, 156);
        
                BasicArrowButton custom = new BasicArrowButton(
                BasicArrowButton.SOUTH, null, null, Color.WHITE, null);
                custom.setBorder(new MatteBorder(0,0,0,0,flatGreen));
                return custom;
            }
        }); 

       return box;
    }
    
    public void hideSpinnerArrow(JSpinner spinner) {
        spinner.setUI(new BasicSpinnerUI() {
            protected Component createNextButton() {
                return null;
            }

            protected Component createPreviousButton() {
                return null;
            }
        });
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rightClickMenu = new javax.swing.JPopupMenu();
        itemSua = new javax.swing.JMenuItem();
        itemNhap = new javax.swing.JMenuItem();
        pnlBody = new javax.swing.JPanel();
        scroll = new javax.swing.JScrollPane();
        tblRevenue = new javax.swing.JTable();
        lblTotalQuantity = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        scroll1 = new javax.swing.JScrollPane();
        tblStaff = new javax.swing.JTable();
        pnlHead = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        btnThongKe = new javax.swing.JButton();
        yearChooser = new com.toedter.calendar.JYearChooser();
        monthChooser = new com.toedter.calendar.JMonthChooser();
        txtTimKiemInvoice = new javax.swing.JTextField();
        lblTimKiem = new javax.swing.JLabel();
        lblTableStaff = new javax.swing.JLabel();
        lblTableStaff1 = new javax.swing.JLabel();
        lblTimKiem1 = new javax.swing.JLabel();
        txtTimKiemStaff = new javax.swing.JTextField();

        itemSua.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        itemSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ecommerceapp/img/edit_icon.png"))); // NOI18N
        itemSua.setText("Sửa");
        itemSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSuaActionPerformed(evt);
            }
        });
        rightClickMenu.add(itemSua);

        itemNhap.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        itemNhap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ecommerceapp/img/edit_icon.png"))); // NOI18N
        itemNhap.setText("Nhập hàng");
        itemNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemNhapActionPerformed(evt);
            }
        });
        rightClickMenu.add(itemNhap);

        setLayout(new java.awt.BorderLayout());

        pnlBody.setBackground(new java.awt.Color(255, 255, 255));

        scroll.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(77, 77, 77)));

        tblRevenue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblRevenue.setFillsViewportHeight(true);
        tblRevenue.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tblRevenue.setRowHeight(35);
        tblRevenue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblRevenueMouseReleased(evt);
            }
        });
        scroll.setViewportView(tblRevenue);

        lblTotalQuantity.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblTotalQuantity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        lblTotal.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        scroll1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(77, 77, 77)));

        tblStaff.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblStaff.setFillsViewportHeight(true);
        tblStaff.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tblStaff.setRowHeight(35);
        tblStaff.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblStaffMouseReleased(evt);
            }
        });
        scroll1.setViewportView(tblStaff);

        pnlHead.setBackground(new java.awt.Color(255, 255, 255));
        pnlHead.setPreferredSize(new java.awt.Dimension(808, 150));

        lblTitle.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTitle.setText("Thống kê doanh thu");

        btnThongKe.setBackground(new java.awt.Color(77, 77, 77));
        btnThongKe.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnThongKe.setForeground(new java.awt.Color(255, 255, 255));
        btnThongKe.setText("Thống kê");
        btnThongKe.setContentAreaFilled(false);
        btnThongKe.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnThongKe.setOpaque(true);
        btnThongKe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnThongKeMousePressed(evt);
            }
        });
        btnThongKe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongKeActionPerformed(evt);
            }
        });

        yearChooser.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout pnlHeadLayout = new javax.swing.GroupLayout(pnlHead);
        pnlHead.setLayout(pnlHeadLayout);
        pnlHeadLayout.setHorizontalGroup(
            pnlHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeadLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(pnlHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlHeadLayout.createSequentialGroup()
                        .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(168, 168, 168))
                    .addGroup(pnlHeadLayout.createSequentialGroup()
                        .addComponent(monthChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(yearChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnThongKe, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(175, 468, Short.MAX_VALUE))))
        );
        pnlHeadLayout.setVerticalGroup(
            pnlHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHeadLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(yearChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(monthChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnThongKe, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        txtTimKiemInvoice.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTimKiemInvoice.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(77, 77, 77)));
        txtTimKiemInvoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemInvoiceActionPerformed(evt);
            }
        });

        lblTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ecommerceapp/img/search_icon.png"))); // NOI18N

        lblTableStaff.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTableStaff.setText("Nhân viên:");

        lblTableStaff1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTableStaff1.setText("Các sản phẩm đã bán:");

        lblTimKiem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ecommerceapp/img/search_icon.png"))); // NOI18N

        txtTimKiemStaff.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTimKiemStaff.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(77, 77, 77)));
        txtTimKiemStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemStaffActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBodyLayout = new javax.swing.GroupLayout(pnlBody);
        pnlBody.setLayout(pnlBodyLayout);
        pnlBodyLayout.setHorizontalGroup(
            pnlBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBodyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlHead, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBodyLayout.createSequentialGroup()
                .addGroup(pnlBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlBodyLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlBodyLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(lblTotalQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlBodyLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(pnlBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scroll1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlBodyLayout.createSequentialGroup()
                                .addGroup(pnlBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlBodyLayout.createSequentialGroup()
                                        .addComponent(lblTableStaff1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnlBodyLayout.createSequentialGroup()
                                        .addComponent(lblTableStaff)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblTimKiem1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTimKiemInvoice, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTimKiemStaff, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(scroll))))
                .addGap(30, 30, 30))
        );
        pnlBodyLayout.setVerticalGroup(
            pnlBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBodyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlHead, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTableStaff)
                    .addComponent(txtTimKiemStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTimKiem1, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(18, 18, 18)
                .addComponent(scroll1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBodyLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(lblTimKiem))
                    .addGroup(pnlBodyLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(lblTableStaff1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlBodyLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(txtTimKiemInvoice, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(scroll, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTotalQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        add(pnlBody, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void itemSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSuaActionPerformed
      
    }//GEN-LAST:event_itemSuaActionPerformed

    private void tblRevenueMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRevenueMouseReleased
      
    }//GEN-LAST:event_tblRevenueMouseReleased

    private void itemNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemNhapActionPerformed
      
    }//GEN-LAST:event_itemNhapActionPerformed

    private void btnThongKeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThongKeMousePressed
       
    }//GEN-LAST:event_btnThongKeMousePressed

    private void btnThongKeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongKeActionPerformed
    tblStaff.getSelectionModel().clearSelection();
    loadTableData(monthChooser.getMonth()+1, yearChooser.getYear());
    }//GEN-LAST:event_btnThongKeActionPerformed

    private void txtTimKiemInvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemInvoiceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemInvoiceActionPerformed

    private void tblStaffMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblStaffMouseReleased
        // TODO add your handling code here:
       int rowindex = tblStaff.getSelectedRow();
       if (rowindex >=0)
       {
           Long empolyeeId = Long.parseLong(tblStaff.getValueAt(rowindex,0).toString());
           List<RevenueDTO> revenues = invoiceBLL.getEmployeeSalesStatistics(empolyeeId, monthChooser.getMonth()+1, yearChooser.getYear());
           System.out.println(revenues.size());
           if (revenues.isEmpty())
           {
               initNullTable();
               lblTitle.setText("Thống kê doanh thu tháng " + (monthChooser.getMonth()+1) + " năm " + yearChooser.getYear()
                                + " của nhân viên " + tblStaff.getValueAt(rowindex,1).toString()
               );
               lblTotalQuantity.setText("Tổng số lượng bán: 0");
               lblTotal.setText("Tổng doanh thu: 0");
           }
           else  
           {
                tblRevenue.setModel(new RevenueTableLoaderUtil().setTable(revenues, this.columnNames));
                headerColor(77,77,77,tblRevenue);
                lblTitle.setText("Thống kê doanh thu tháng " + (monthChooser.getMonth()+1) + " năm " + yearChooser.getYear()
                                + " của nhân viên " + tblStaff.getValueAt(rowindex,1).toString()
                );
                int total = 0;
                int noTotal = 0;
                for (int i = 0; i < revenues.size(); i++)
                {
                     total += revenues.get(i).getProductSubTotal();
                     noTotal += revenues.get(i).getProductTotalQuantity();
                }

                String strTotal = String.format("%,d", total);
                lblTotalQuantity.setText("Tổng số lượng bán: " + noTotal);
                lblTotal.setText("Tổng doanh thu: " + strTotal);
               
           }
       } else JOptionPane.showMessageDialog(this, "Hãy chọn 1 khóa để hiển thị", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
       this.rowSorter = TableSetupUtil.setTableFilter(tblRevenue, txtTimKiemInvoice);
    }//GEN-LAST:event_tblStaffMouseReleased

    private void txtTimKiemStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemStaffActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemStaffActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThongKe;
    private javax.swing.JMenuItem itemNhap;
    private javax.swing.JMenuItem itemSua;
    private javax.swing.JLabel lblTableStaff;
    private javax.swing.JLabel lblTableStaff1;
    private javax.swing.JLabel lblTimKiem;
    private javax.swing.JLabel lblTimKiem1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblTotalQuantity;
    private com.toedter.calendar.JMonthChooser monthChooser;
    private javax.swing.JPanel pnlBody;
    private javax.swing.JPanel pnlHead;
    private javax.swing.JPopupMenu rightClickMenu;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JScrollPane scroll1;
    private javax.swing.JTable tblRevenue;
    private javax.swing.JTable tblStaff;
    private javax.swing.JTextField txtTimKiemInvoice;
    private javax.swing.JTextField txtTimKiemStaff;
    private com.toedter.calendar.JYearChooser yearChooser;
    // End of variables declaration//GEN-END:variables
}
